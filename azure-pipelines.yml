# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pr:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: |
   sudo apt-get update
   sudo apt-get install -y npm
  displayName: 'Installing npm using apt-get'

- script: |
   npm audit || true
  displayName: 'Scanning the dependencies'

- script: |
   npm run test || true
  displayName: 'Perfomed unit testing'

- script: |
   sonar-scanner .\ || true
  displayName: 'Review code'

- script: |
   npm install
   npm run build
  displayName: 'Get all dependencies and Create executable file'

- script: |
   sudo apt-get install wget apt-transport-https gnupg lsb-release
   wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
   echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
   sudo apt-get update
   sudo apt-get install trivy
  displayName: 'Install trivy'

- script: |
   trivy config Dockerfile
  displayName: 'Review code'

- script: |
   BASE_IMAGE=`grep FROM Dockerfile | awk '{print $2}'`
   trivy image $BASE_IMAGE
  displayName: 'Scanning the base image'

- script: |
   trivy config k8s
  displayName: 'Scanning the manifest files'

- script: |
   docker build -t nagalagishetty/frontend-app:1.0.1 .
  displayName: "Build the container image"

- script: |
    echo $(DOCKER_HUB_PASSWORD) | sudo docker login --username $(DOCKER_HUB_USERNAME) --password-stdin
    sudo docker push nagalagishetty/frontend-app:1.0.1
  displayName: 'Login and push the image to docker hub registry'

- task: KubernetesManifest@0
  displayName: 'Deploy to GKE'
  inputs:
   kubernetesServiceConnection: 'gcloud_cluster_service'
   action: deploy
   manifests: |
        k8s/simple/frontend-deployment.yaml
        k8s/simple/service-frontend-lb.yaml
